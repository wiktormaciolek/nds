// Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
// Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license

/**
 * @summary Initializes data table
 *
 * @name base
 * @selector .nds-table
 * @restrict table
 * @required
 * @variant
 */
.nds-table {
  // scss-lint:disable SelectorDepth
  background-color: $color-background-alt;
  font-size: inherit; // forces table to respect body font

  // Cells
  th,
  td {
    padding: $table-cell-spacing;
    white-space: nowrap;
    position: relative;
  }

  // Table Heading Cells
  th {
    font-weight: $font-weight-regular;

    &:focus {
      outline: 0;
    }
  }

  thead th {
    background-color: $table-color-background-header;
    color: $table-color-text-header;
    padding: $table-cell-spacing;
  }

  /**
   * Default Table Row Hover
   *
   * @selector .nds-no-row-hover
   * @restrict .nds-table
   * @modifier
   */
  &:not(.nds-no-row-hover) tbody tr:hover,
  &:not(.nds-no-row-hover) tbody tr:focus {

    outline: 0;

    > td,
    > th {
      background-color: $color-background-row-hover;
    }
  }

  /**
   * Selected Table Row + Hover
   *
   * @selector .nds-is-selected
   * @restrict .nds-table tr
   * @modifier
   */
  tbody tr.nds-is-selected,
  &:not(.nds-no-row-hover) tr.nds-is-selected:hover {

    > td,
    > th {
      background-color: $color-background-row-selected;
    }
  }

  .nds-data-table-group-button {
    border: none;
    background-color: inherit;
  }
  
  .nds-data-table-group-button:focus {
    background-color: inherit;
  }

  /**
   * By default, nowrap is applied
   *
   * @selector .nds-cell-wrap
   * @restrict .nds-table th, .nds-table td
   * @modifier
   */
  .nds-cell-wrap {
    white-space: normal;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }

  // Reduce cell to the width of its content, if space is available
  .nds-cell-shrink {
    width: 1%;
  }

  /**
   * Use to add a left padding buffer to cells
   *
   * @selector .nds-cell-buffer_left
   * @restrict .nds-table th, .nds-table td
   * @modifier
   */
  .nds-cell-buffer_left,
  .nds-cell-buffer--left {
    padding-#{$left}: $spacing-large;
  }

  /**
   * Use to add a right padding buffer to cells
   *
   * @selector .nds-cell-buffer_right
   * @restrict .nds-table th, .nds-table td
   * @modifier
   */
  .nds-cell-buffer_right,
  .nds-cell-buffer--right {
    padding-#{$right}: $spacing-large;
  }

  tbody {
    // Start the counter
    tr {
      counter-increment: row-number;
    }
  }

  .nds-row-number {
    // Add the counter number
    &:after {
      content: counter(row-number);
    }
  }

  /**
   * Focus state on a cell
   *
   * @selector .nds-has-focus
   * @restrict .nds-table th, .nds-table td
   * @modifier
   */
  th:focus,
  [role="gridcell"]:focus {
    outline: 0;
  }

  th:focus,
  th.nds-has-focus,
  [role="gridcell"]:focus,
  [role="gridcell"].nds-has-focus {
    box-shadow: $color-border-selection 0 0 0 1px inset;
  }

  th:active,
  [role="gridcell"]:active {
    box-shadow: none;
  }
}

/**
 * Add left and right padding to the first and last cells of a table
 *
 * @selector .nds-table_cell-buffer
 * @restrict .nds-table
 * @required
 * @modifier
 */
.nds-table_cell-buffer,
.nds-table--cell-buffer {

  // First cells in a row
  tr > th:first-child,
  tr > td:first-child {
    padding-#{$left}: $spacing-large;
  }

  // Last cells in a row
  tr > th:last-child,
  tr > td:last-child {
    padding-#{$right}: $spacing-large;
  }
}

/**
 * Add vertical borders to a table
 *
 * @selector .nds-table_bordered
 * @restrict .nds-table
 * @modifier
 */
.nds-table_bordered,
.nds-table--bordered {
  border-collapse: separate;
  // scss-lint:disable SelectorDepth
  border: {
    top: $border-width-thin solid $color-border;
    bottom: $border-width-thin solid $color-border;
  }

  // More than one row in thead
  thead > tr + tr > th {
    border-top: $border-width-thin solid $color-border;
  }

  // Cells
  tbody td,
  tbody th {
    border-top: $border-width-thin solid $color-border;
  }

  // Default Table Row Hover
  //
  // Checks if .no-row-hover is applied to parent table
  // Applies hovers to only <th> and <td> within <tbody>
  // Also checks that the <th> and <td> do not have the class .is-selected
  // This retains the selected state when a row is hovered
  //
  // Box shadow used to eliminate jumpiness on hover
  &:not(.nds-no-row-hover) tbody tr:hover > td:not(.nds-is-selected),
  &:not(.nds-no-row-hover) tbody tr:hover > th:not(.nds-is-selected),
  &:not(.nds-no-row-hover) tbody tr:focus > td:not(.nds-is-selected),
  &:not(.nds-no-row-hover) tbody tr:focus > th:not(.nds-is-selected) {
    box-shadow:
      $color-border 0 ($border-width-thin * -1) 0 inset,
      $color-border 0 ($border-width-thin) 0 inset;
  }
}

/**
 * Add column borders
 *
 * @selector .nds-table_col-bordered
 * @restrict .nds-table
 * @modifier
 */
.nds-table_col-bordered,
.nds-table--col-bordered {

  td + td,
  th + th,
  th + td,
  td + th {
    border-#{$left}: $border-width-thin solid $color-border;
  }
}

/**
 * Add alternating strips to rows
 *
 * @selector .nds-table_striped
 * @restrict .nds-table
 * @modifier
 */
.nds-table_striped,
.nds-table--striped {
  // scss-lint:disable SelectorDepth
  tbody tr:nth-of-type(even) > td,
  tbody tr:nth-of-type(even) > th {
    background-color: $color-background-row-hover;
  }
}

/**
 * @summary Set table to use fixed layout for width and truncation purposes
 *
 * @name advanced
 * @selector .nds-table_fixed-layout
 * @restrict .nds-table
 * @variant
 */
.nds-table_fixed-layout,
.nds-table--fixed-layout {
  table-layout: fixed;
  width: 100%;
  white-space: nowrap;

  thead {
    background-color: $color-background-alt;
  }

  // Tap into hardware acceleration for performance of large amounts of rows
  tbody {
    transform: translateZ(0);
  }

  .nds-cell-shrink {
    width: $square-icon-large-boundary;

    &:nth-child(n) {
      padding: {
        #{$left}: 0;
        #{$right}: 0;
      }
    }

    &:first-child {
      text-align: $right;
      padding-#{$right}: $spacing-x-small;
    }

    &:last-child {
      text-align: $left;
      padding-#{$left}: $spacing-x-small;
    }
  }
}

/**
 * If the column is sortable than lets handle the actionable
 * region of the `<th>` cell
 *
 * @selector .nds-is-sortable
 * @restrict .nds-table_fixed-layout th
 */
.nds-is-sortable {

  .nds-th__action:hover,
  .nds-th__action:focus,
  &.nds-has-focus .nds-th__action,
  &.nds-has-focus .nds-th__action:hover,
  &.nds-has-focus .nds-th__action:focus {
    background-color: $table-color-background-header-hover;
    color: currentColor;

    .nds-icon {
      display: inline-block;
      fill: $color-text-link;
    }
  }
}

/**
 * Actionable area inside th
 *
 * @selector .nds-th__action
 * @restrict .nds-table_fixed-layout th div, .nds-table_fixed-layout th a
 */
.nds-th__action {
  display: flex;
  padding: $table-cell-spacing;
  height: 2rem; // Keep in sync with the padding of .nds-table--header-fixed_container
  align-items: center;

  &:focus,
  &:hover {
    outline: 0;
    background-color: $table-color-background-header-hover;
  }

  /**
   * Allows for alignment of form element, such as a checkbox
   *
   * @selector .nds-th__action_form
   * @restrict .nds-th__action
   */
  &_form,
  &--form {
    display: inline-flex; // Allows for alignment of form element, such as a checkbox
  }
}

/**
 * Icon inside sortable th
 *
 * @selector .nds-is-sortable__icon
 * @restrict .nds-is-sortable .nds-icon
 */
.nds-is-sortable__icon {
  @include square($square-icon-small-content);
  margin-#{$left}: $spacing-xx-small;
  display: none;
}

/**
 * Active state of sorted column
 *
 * @selector .nds-is-sorted
 * @restrict .nds-table_fixed-layout th
 */
.nds-is-sorted {

  .nds-is-sortable__icon {
    display: inline-block;
  }

  /**
   * Change direction of arrow
   *
   * @name sorted-ascending
   * @selector .nds-is-sorted_asc
   * @restrict .nds-is-sorted
   * @modifier
   */
  &_asc .nds-is-sortable__icon,
  &--asc .nds-is-sortable__icon {
    transform: rotate(180deg);
  }
}

/**
 * Resizable data table columns
 *
 * @selector .nds-table_resizable-cols
 * @restrict .nds-table_fixed-layout
 */
.nds-table_resizable-cols thead th,
.nds-table--resizable-cols thead th {
  padding: 0; // Reset padding so actionable link bleeds to edge
}


/**
 * Provide an indicator that resizing is available
 *
 * @selector .nds-is-resizable
 * @restrict .nds-table_resizable-cols th
 */
.nds-is-resizable {

  .nds-th__action:hover,
  .nds-th__action:focus {
    box-shadow: $color-border-separator-alt ($spacing-xx-small * -1) 0 0 inset;
  }
}

/**
 * Resizable handle
 *
 * @selector .nds-resizable
 * @restrict .nds-is-resizable div
 */
.nds-resizable {
  max-width: 100%;

  /**
   * Grab handle to resize column
   *
   * @selector .nds-resizable__handle
   * @restrict .nds-resizable span
   */
  &__handle {
    position: absolute;
    #{$right}: 0;
    top: 0;
    width: $spacing-xx-small;
    height: 100%;
    background: $color-background-button-brand;
    display: block;
    cursor: col-resize;
    opacity: 0;
    z-index: $z-index-popup;

    &:hover,
    &:focus,
    &:active {
      opacity: 1;
    }
  }

  /**
   * Grab handle divider indicator when resizing column
   *
   * @selector .nds-resizable__divider
   * @restrict .nds-resizable__handle span
   */
  &__divider {
    position: absolute;
    #{$right}: 0;
    height: 100vh;
    width: 1px;
    background: $color-background-button-brand;
  }

  // No idea what this does
  // It looks like it would make the resizable handle show up when the input in the header has focus?
  &__input:focus ~ .nds-resizable__handle {
    opacity: 1;
  }
}

@import 'blame';
